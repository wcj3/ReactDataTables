@import '../../shared/styles/colors.css';

.ReactDataTable {
  position: relative;
  &-controlsContainer {
    padding: 5px 20px;
    border: 1px solid $gray;
    border-bottom: transparent;
    display: flex;
    align-items: flex-end;
    flex-direction: column;
  }
  &-controls{
    height: 0;
    width: 140px;
    transition: height .4s;
    &.is-open{
      height: 75px;
      transition: height .4s;
    }
    & > * {
      margin-bottom: 5px;
    }
  }
  /*styles for the wrapper around RDT*/
  &-wrapper {
    position: relative;
    margin-bottom: 50px;
    border: 1px solid $gray;
    border-top: transparent;
    overflow-x: auto;
  }
  &-row {
    display: grid;
    background: inherit;
    padding: 5px 10px;
    &--zebra:nth-of-type(2n) {
      background: $lightgray;
    }
  }
  &-container {
    width: 95vw;
  }
}

:global .side-scroller > .header > span:first-of-type,
:global .side-scroller > .body > div > span:first-of-type {
  background: inherit;
  position: sticky;
  left: 0px;
  width: 100px;
  z-index: 2;
  box-shadow: 0px 0px 5px 0px $darkgray;
  transition: z-index box-shadow .3s;
}

.active {
  color: black;
}

button {
  position: relative;
  border: none;
  background: none;
  font-size: inherit;
  color: inherit;
  padding: 0;
  :hover{
    cursor: pointer;
  }
  &:disabled:hover {
    cursor: not-allowed;
  }
  &:focus {
    outline: none;
  }
}

@define-extend grid-helper {
  display: grid;
  grid-template-rows: auto;
  position: relative;
}

:global .header {
  background: #3498db;
  z-index: 3;
  transition: all .1s;
  position: sticky;
  top: 0;
}

:global .body {
  @extend grid-helper;
  grid-row-gap: 1px;
  background: white;
}

:global .cell {
  padding: 5px;
}

:global .body .cell,
:global .header .cell {
  display: flex;
  justify-self: start;
  align-self: center;
  height: 32px;
  align-items: center;
  white-space: pre;
}

:global .body .cell {
  max-width: 140px;
  text-align: left;
  position: relative;
}

:global .body .data {
  text-overflow: ellipsis;
  overflow: hidden;
}

.cell-line::after {
  content: '';
  border-bottom: 1px solid $gray;
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  display: inline-block;
}

:global .risen {
  z-index: 3;
  box-shadow: 0px 2px 1px 1px $gray;
}

.fixed {
  position: fixed;
  background: white;
}

/*Left must match margin position*/
