:root {
  --color: rgba(127, 140, 141, .5);
  --cellHeight: 32px;
}

.ReactDataTable {
  margin-bottom: 40px;
  position: relative;
}

button {
 position: relative;
 border: none;
 background: none;
 font-size: inherit;
 color: inherit;
 display: block;
 padding: 0;
 &:disabled:hover {
   cursor: not-allowed;
 }
 &:focus {
   outline: none;
 }
}

.ReactDataTable-wrapper {
  width: 95vw;
  overflow: scroll;
  position: relative;
  margin-bottom: 50px;
  border: 1px solid rgb(218, 218, 218);
}

.ReactDataTable-density {
  display: flex;
  justify-content: flex-end;
  padding-right: 15px;
  height: 25px;
  position: sticky;
  top: 0;
  z-index: 2;
  background: white;
  color: rgb(130, 130, 130);
}

.ReactDataTable-row{
  display: grid;
}

.grid-helper {
  display: grid;
  grid-template-rows: auto;
  position: relative;
}

.header {
  background: #3498db;
  z-index: 2;
  box-shadow: 0 0 0 0 var(--color);
  transition: all .1s;
  position: sticky;
  top: 25px;
}

.header .cell {
  margin: 5px 0px;
}

.body {
  grid-row-gap: 1px;
  background: white;
}

.body .cell, .header .cell {
  display: flex;
  justify-self: start;
  align-self: center;
  height: var(--cellHeight);
  align-items: center;
  padding: 0px 8px;
  white-space: pre;
}

.body .cell {
  max-width: 140px;
  text-align: left;
  position: relative;
}

.body .data {
  text-overflow: ellipsis;
  overflow: hidden;
}

.cell-line::after {
  content: '';
  border-bottom: 1px solid var(--color);
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  display: inline-block;
}

.cell-zebra {
  background: lightgray;
}

.risen {
  z-index: 2;
  box-shadow: 0px 2px 1px 1px var(--color);
}

.fixed {
  position: fixed;
  background: white;
}


/*Left must match margin position*/

.side-scroller>.header>span:first-of-type, .side-scroller>.body>span:nth-of-type(6n+1) {
  background: inherit;
  position: sticky;
  left: 0px;
  width: 100px;
  z-index: 1;
  box-shadow: 2px 0px 1px 0px var(--color);
  transition: z-index box-shadow .3s;
}
